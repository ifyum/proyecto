{"remainingRequest":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\documento\\documento.service.ts","dependencies":[{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\documento\\documento.service.ts","mtime":1572998498815},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564750574678},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1564750573341},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar DocumentoService = /** @class */ (function () {\r\n    function DocumentoService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/documentos';\r\n    }\r\n    DocumentoService.prototype.create = function (documento) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(documento);\r\n        return this.http\r\n            .post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    DocumentoService.prototype.update = function (documento) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(documento);\r\n        return this.http\r\n            .put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    DocumentoService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    DocumentoService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    DocumentoService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    DocumentoService.prototype.download = function (hash) {\r\n        return this.http.get(this.resourceUrl + \"/\" + hash + \"/download\", { observe: 'response', responseType: 'blob' });\r\n    };\r\n    DocumentoService.prototype.view = function (hash) {\r\n        return this.http.get(this.resourceUrl + \"/\" + hash + \"/view\", { observe: 'response', responseType: 'blob' });\r\n    };\r\n    DocumentoService.prototype.findByProvidencia = function (providecia) {\r\n        var _this = this;\r\n        return this.http\r\n            .post(this.resourceUrl + \"/providencia\", providecia, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    DocumentoService.prototype.convertDateFromClient = function (documento) {\r\n        var copy = Object.assign({}, documento, {\r\n            fechaCreado: documento.fechaCreado != null && documento.fechaCreado.isValid() ? documento.fechaCreado.format(input_constants_1.DATE_FORMAT) : null\r\n        });\r\n        return copy;\r\n    };\r\n    DocumentoService.prototype.convertDateFromServer = function (res) {\r\n        res.body.fechaCreado = res.body.fechaCreado != null ? moment(res.body.fechaCreado) : null;\r\n        return res;\r\n    };\r\n    DocumentoService.prototype.convertDateArrayFromServer = function (res) {\r\n        res.body.forEach(function (documento) {\r\n            documento.fechaCreado = documento.fechaCreado != null ? moment(documento.fechaCreado) : null;\r\n        });\r\n        return res;\r\n    };\r\n    DocumentoService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], DocumentoService);\r\n    return DocumentoService;\r\n    var _a;\r\n}());\r\nexports.DocumentoService = DocumentoService;\r\n",{"version":3,"file":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\documento\\documento.service.ts","sourceRoot":"","sources":["C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\documento\\documento.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IDocumento } from 'app/shared/model/documento.model';\r\nimport {IProvidencia} from 'app/shared/model/providencia.model';\r\n\r\ntype EntityResponseType = HttpResponse<IDocumento>;\r\ntype EntityArrayResponseType = HttpResponse<IDocumento[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DocumentoService {\r\n    private resourceUrl = SERVER_API_URL + 'api/documentos';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(documento: IDocumento): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(documento);\r\n        return this.http\r\n            .post<IDocumento>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(documento: IDocumento): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(documento);\r\n        return this.http\r\n            .put<IDocumento>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<IDocumento>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<IDocumento[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    download(hash: string): Observable<HttpResponse<Blob>> {\r\n        return this.http.get(`${this.resourceUrl}/${hash}/download`, { observe: 'response', responseType: 'blob' });\r\n    }\r\n    view(hash: string): Observable<HttpResponse<Blob>> {\r\n        return this.http.get(`${this.resourceUrl}/${hash}/view`, { observe: 'response', responseType: 'blob' });\r\n    }\r\n    findByProvidencia( providecia: IProvidencia): Observable<EntityResponseType> {\r\n        return this.http\r\n            .post<IDocumento>(`${this.resourceUrl}/providencia`, providecia, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    private convertDateFromClient(documento: IDocumento): IDocumento {\r\n        const copy: IDocumento = Object.assign({}, documento, {\r\n            fechaCreado: documento.fechaCreado != null && documento.fechaCreado.isValid() ? documento.fechaCreado.format(DATE_FORMAT) : null\r\n        });\r\n        return copy;\r\n    }\r\n\r\n    private convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n        res.body.fechaCreado = res.body.fechaCreado != null ? moment(res.body.fechaCreado) : null;\r\n        return res;\r\n    }\r\n\r\n    private convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n        res.body.forEach((documento: IDocumento) => {\r\n            documento.fechaCreado = documento.fechaCreado != null ? moment(documento.fechaCreado) : null;\r\n        });\r\n        return res;\r\n    }\r\n\r\n}\r\n"]}]}