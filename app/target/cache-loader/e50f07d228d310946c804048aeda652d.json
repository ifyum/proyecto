{"remainingRequest":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","dependencies":[{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","mtime":1572998498753},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564750574678},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1564750573341},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar login_service_1 = require(\"app/core/login/login.service\");\r\nvar AuthExpiredInterceptor = /** @class */ (function () {\r\n    function AuthExpiredInterceptor(injector) {\r\n        this.injector = injector;\r\n    }\r\n    AuthExpiredInterceptor.prototype.intercept = function (request, next) {\r\n        var _this = this;\r\n        return next.handle(request).pipe(operators_1.tap(function (event) { }, function (err) {\r\n            if (err instanceof http_1.HttpErrorResponse) {\r\n                if (err.status === 401) {\r\n                    var loginService = _this.injector.get(login_service_1.LoginService);\r\n                    loginService.logout();\r\n                }\r\n            }\r\n        }));\r\n    };\r\n    return AuthExpiredInterceptor;\r\n}());\r\nexports.AuthExpiredInterceptor = AuthExpiredInterceptor;\r\n",{"version":3,"file":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts","sourceRoot":"","sources":["C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\blocks\\interceptor\\auth-expired.interceptor.ts"],"names":[],"mappings":";;AACA,6CAA+G;AAE/G,4CAAqC;AACrC,8DAA4D;AAE5D;IACI,gCAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAG,CAAC;IAE1C,0CAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAcC;QAbG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5B,eAAG,CACC,UAAC,KAAqB,IAAM,CAAC,EAC7B,UAAC,GAAQ;YACL,EAAE,CAAC,CAAC,GAAG,YAAY,wBAAiB,CAAC,CAAC,CAAC;gBACnC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;oBACrB,IAAM,YAAY,GAAiB,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,4BAAY,CAAC,CAAC;oBACnE,YAAY,CAAC,MAAM,EAAE,CAAC;gBAC1B,CAAC;YACL,CAAC;QACL,CAAC,CACJ,CACJ,CAAC;IACN,CAAC;IACL,6BAAC;AAAD,CAAC,AAlBD,IAkBC;AAlBY,wDAAsB","sourcesContent":["import { Injector } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LoginService } from 'app/core/login/login.service';\r\n\r\nexport class AuthExpiredInterceptor implements HttpInterceptor {\r\n    constructor(private injector: Injector) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(\r\n            tap(\r\n                (event: HttpEvent<any>) => {},\r\n                (err: any) => {\r\n                    if (err instanceof HttpErrorResponse) {\r\n                        if (err.status === 401) {\r\n                            const loginService: LoginService = this.injector.get(LoginService);\r\n                            loginService.logout();\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n        );\r\n    }\r\n}\r\n"]}]}