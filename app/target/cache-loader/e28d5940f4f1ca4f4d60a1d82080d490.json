{"remainingRequest":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\adjunto\\adjunto.service.ts","dependencies":[{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\adjunto\\adjunto.service.ts","mtime":1572998498789},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564750574678},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1564750573341},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar AdjuntoService = /** @class */ (function () {\r\n    function AdjuntoService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/adjuntos';\r\n    }\r\n    AdjuntoService.prototype.create = function (adjunto) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(adjunto);\r\n        return this.http\r\n            .post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    AdjuntoService.prototype.update = function (adjunto) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(adjunto);\r\n        return this.http\r\n            .put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    AdjuntoService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    AdjuntoService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    AdjuntoService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    AdjuntoService.prototype.download = function (hash) {\r\n        return this.http.get(this.resourceUrl + \"/\" + hash + \"/download\", { observe: 'response', responseType: 'blob' });\r\n    };\r\n    AdjuntoService.prototype.view = function (hash) {\r\n        return this.http.get(this.resourceUrl + \"/\" + hash + \"/view\", { observe: 'response', responseType: 'blob' });\r\n    };\r\n    AdjuntoService.prototype.convertDateFromClient = function (adjunto) {\r\n        var copy = Object.assign({}, adjunto, {\r\n            fechaCreado: adjunto.fechaCreado != null && adjunto.fechaCreado.isValid() ? adjunto.fechaCreado.format(input_constants_1.DATE_FORMAT) : null,\r\n            fechaSubido: adjunto.fechaSubido != null && adjunto.fechaSubido.isValid() ? adjunto.fechaSubido.toJSON() : null\r\n        });\r\n        return copy;\r\n    };\r\n    AdjuntoService.prototype.convertDateFromServer = function (res) {\r\n        res.body.fechaCreado = res.body.fechaCreado != null ? moment(res.body.fechaCreado) : null;\r\n        res.body.fechaSubido = res.body.fechaSubido != null ? moment(res.body.fechaSubido) : null;\r\n        return res;\r\n    };\r\n    AdjuntoService.prototype.convertDateArrayFromServer = function (res) {\r\n        res.body.forEach(function (adjunto) {\r\n            adjunto.fechaCreado = adjunto.fechaCreado != null ? moment(adjunto.fechaCreado) : null;\r\n            adjunto.fechaSubido = adjunto.fechaSubido != null ? moment(adjunto.fechaSubido) : null;\r\n        });\r\n        return res;\r\n    };\r\n    AdjuntoService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], AdjuntoService);\r\n    return AdjuntoService;\r\n    var _a;\r\n}());\r\nexports.AdjuntoService = AdjuntoService;\r\n",{"version":3,"file":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\adjunto\\adjunto.service.ts","sourceRoot":"","sources":["C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\adjunto\\adjunto.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { DATE_FORMAT } from 'app/shared/constants/input.constants';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IAdjunto } from 'app/shared/model/adjunto.model';\r\n\r\ntype EntityResponseType = HttpResponse<IAdjunto>;\r\ntype EntityArrayResponseType = HttpResponse<IAdjunto[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AdjuntoService {\r\n    private resourceUrl = SERVER_API_URL + 'api/adjuntos';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(adjunto: IAdjunto): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(adjunto);\r\n        return this.http\r\n            .post<IAdjunto>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(adjunto: IAdjunto): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(adjunto);\r\n        return this.http\r\n            .put<IAdjunto>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<IAdjunto>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<IAdjunto[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    download(hash: string): Observable<HttpResponse<Blob>> {\r\n        return this.http.get(`${this.resourceUrl}/${hash}/download`, {observe: 'response', responseType: 'blob'});\r\n    }\r\n\r\n    view(hash: string): Observable<HttpResponse<Blob>> {\r\n        return this.http.get(`${this.resourceUrl}/${hash}/view`, {observe: 'response', responseType: 'blob'});\r\n    }\r\n    private convertDateFromClient(adjunto: IAdjunto): IAdjunto {\r\n        const copy: IAdjunto = Object.assign({}, adjunto, {\r\n            fechaCreado: adjunto.fechaCreado != null && adjunto.fechaCreado.isValid() ? adjunto.fechaCreado.format(DATE_FORMAT) : null,\r\n            fechaSubido: adjunto.fechaSubido != null && adjunto.fechaSubido.isValid() ? adjunto.fechaSubido.toJSON() : null\r\n        });\r\n        return copy;\r\n    }\r\n\r\n    private convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n        res.body.fechaCreado = res.body.fechaCreado != null ? moment(res.body.fechaCreado) : null;\r\n        res.body.fechaSubido = res.body.fechaSubido != null ? moment(res.body.fechaSubido) : null;\r\n        return res;\r\n    }\r\n\r\n    private convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n        res.body.forEach((adjunto: IAdjunto) => {\r\n            adjunto.fechaCreado = adjunto.fechaCreado != null ? moment(adjunto.fechaCreado) : null;\r\n            adjunto.fechaSubido = adjunto.fechaSubido != null ? moment(adjunto.fechaSubido) : null;\r\n        });\r\n        return res;\r\n    }\r\n}\r\n"]}]}