{"remainingRequest":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\movimiento-providencia\\movimiento-providencia.service.ts","dependencies":[{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\movimiento-providencia\\movimiento-providencia.service.ts","mtime":1572998498905},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564750574678},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1564750573341},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar MovimientoProvidenciaService = /** @class */ (function () {\r\n    function MovimientoProvidenciaService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/movimiento-providencias';\r\n    }\r\n    MovimientoProvidenciaService.prototype.create = function (movimientoProvidencia) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(movimientoProvidencia);\r\n        return this.http\r\n            .post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    MovimientoProvidenciaService.prototype.update = function (movimientoProvidencia) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(movimientoProvidencia);\r\n        return this.http\r\n            .put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    MovimientoProvidenciaService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    MovimientoProvidenciaService.prototype.findByIdProvidencia = function (filtroMoviPro) {\r\n        var _this = this;\r\n        // const copy = this.convertDateFromClientProvidencia(filtroMoviPro);\r\n        return this.http\r\n            .post(this.resourceUrl + '/providencia', filtroMoviPro, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    MovimientoProvidenciaService.prototype.getAllWithoutPagination = function () {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + '/list', { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    MovimientoProvidenciaService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    MovimientoProvidenciaService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    MovimientoProvidenciaService.prototype.convertDateFromClient = function (movimientoProvidencia) {\r\n        var copy = Object.assign({}, movimientoProvidencia, {\r\n            fecha: movimientoProvidencia.fecha != null && movimientoProvidencia.fecha.isValid() ? movimientoProvidencia.fecha.toJSON() : null\r\n        });\r\n        return copy;\r\n    };\r\n    MovimientoProvidenciaService.prototype.convertDateFromClientProvidencia = function (providencia) {\r\n        var copy = Object.assign({}, providencia, {\r\n            fechaSolicitud: providencia.fechaSolicitud != null && providencia.fechaSolicitud.isValid() ? providencia.fechaSolicitud.toJSON() : null,\r\n            fechaCreacion: providencia.fechaCreacion != null && providencia.fechaCreacion.isValid() ? providencia.fechaCreacion.toJSON() : null\r\n        });\r\n        return copy;\r\n    };\r\n    MovimientoProvidenciaService.prototype.convertDateFromServer = function (res) {\r\n        res.body.fecha = res.body.fecha != null ? moment(res.body.fecha) : null;\r\n        return res;\r\n    };\r\n    MovimientoProvidenciaService.prototype.convertDateArrayFromServer = function (res) {\r\n        res.body.forEach(function (movimientoProvidencia) {\r\n            movimientoProvidencia.fecha = movimientoProvidencia.fecha != null ? moment(movimientoProvidencia.fecha) : null;\r\n        });\r\n        return res;\r\n    };\r\n    MovimientoProvidenciaService.prototype.convertDateArrayProvidenciaFromServer = function (res) {\r\n        res.body.forEach(function (providencia) {\r\n            providencia.fechaSolicitud = providencia.fechaSolicitud != null ? moment(providencia.fechaSolicitud) : null;\r\n            providencia.fechaCreacion = providencia.fechaCreacion != null ? moment(providencia.fechaCreacion) : null;\r\n        });\r\n        return res;\r\n    };\r\n    MovimientoProvidenciaService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], MovimientoProvidenciaService);\r\n    return MovimientoProvidenciaService;\r\n    var _a;\r\n}());\r\nexports.MovimientoProvidenciaService = MovimientoProvidenciaService;\r\n",{"version":3,"file":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\movimiento-providencia\\movimiento-providencia.service.ts","sourceRoot":"","sources":["C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\movimiento-providencia\\movimiento-providencia.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment from 'moment';\r\nimport { map } from 'rxjs/operators';\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { createRequestOption } from 'app/shared';\r\nimport { IMovimientoProvidencia } from 'app/shared/model/movimiento-providencia.model';\r\nimport { IProvidencia } from 'app/shared/model/providencia.model';\r\nimport {IFiltroMovPro} from 'app/shared/model/filtroMovimiento.model';\r\n\r\ntype EntityResponseType = HttpResponse<IMovimientoProvidencia>;\r\ntype EntityArrayResponseType = HttpResponse<IMovimientoProvidencia[]>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MovimientoProvidenciaService {\r\n    private resourceUrl = SERVER_API_URL + 'api/movimiento-providencias';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    create(movimientoProvidencia: IMovimientoProvidencia): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(movimientoProvidencia);\r\n        return this.http\r\n            .post<IMovimientoProvidencia>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    update(movimientoProvidencia: IMovimientoProvidencia): Observable<EntityResponseType> {\r\n        const copy = this.convertDateFromClient(movimientoProvidencia);\r\n        return this.http\r\n            .put<IMovimientoProvidencia>(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    find(id: number): Observable<EntityResponseType> {\r\n        return this.http\r\n            .get<IMovimientoProvidencia>(`${this.resourceUrl}/${id}`, { observe: 'response' })\r\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\r\n    }\r\n\r\n    findByIdProvidencia(filtroMoviPro: IFiltroMovPro): Observable<EntityArrayResponseType> {\r\n        // const copy = this.convertDateFromClientProvidencia(filtroMoviPro);\r\n        return this.http\r\n            .post<IMovimientoProvidencia[]>(this.resourceUrl + '/providencia', filtroMoviPro, { observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    getAllWithoutPagination(): Observable<EntityArrayResponseType> {\r\n        return this.http\r\n            .get<IMovimientoProvidencia[]>(this.resourceUrl + '/list', { observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http\r\n            .get<IMovimientoProvidencia[]>(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    private convertDateFromClient(movimientoProvidencia: IMovimientoProvidencia): IMovimientoProvidencia {\r\n        const copy: IMovimientoProvidencia = Object.assign({}, movimientoProvidencia, {\r\n            fecha:\r\n                movimientoProvidencia.fecha != null && movimientoProvidencia.fecha.isValid() ? movimientoProvidencia.fecha.toJSON() : null\r\n        });\r\n        return copy;\r\n    }\r\n\r\n    private convertDateFromClientProvidencia(providencia: IProvidencia): IProvidencia {\r\n        const copy: IProvidencia = Object.assign({}, providencia, {\r\n            fechaSolicitud:\r\n                providencia.fechaSolicitud != null && providencia.fechaSolicitud.isValid() ? providencia.fechaSolicitud.toJSON() : null,\r\n            fechaCreacion:\r\n                providencia.fechaCreacion != null && providencia.fechaCreacion.isValid() ? providencia.fechaCreacion.toJSON() : null\r\n        });\r\n        return copy;\r\n    }\r\n\r\n    private convertDateFromServer(res: EntityResponseType): EntityResponseType {\r\n        res.body.fecha = res.body.fecha != null ? moment(res.body.fecha) : null;\r\n        return res;\r\n    }\r\n\r\n    private convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n        res.body.forEach((movimientoProvidencia: IMovimientoProvidencia) => {\r\n            movimientoProvidencia.fecha = movimientoProvidencia.fecha != null ? moment(movimientoProvidencia.fecha) : null;\r\n        });\r\n        return res;\r\n    }\r\n\r\n    private convertDateArrayProvidenciaFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\r\n        res.body.forEach((providencia: IProvidencia) => {\r\n            providencia.fechaSolicitud = providencia.fechaSolicitud != null ? moment(providencia.fechaSolicitud) : null;\r\n            providencia.fechaCreacion = providencia.fechaCreacion != null ? moment(providencia.fechaCreacion) : null;\r\n        });\r\n        return res;\r\n    }\r\n}\r\n"]}]}