{"remainingRequest":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\shared\\util\\file_upload\\file-upload.component.ts","dependencies":[{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\shared\\util\\file_upload\\file-upload.component.ts","mtime":1572998499165},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564750574678},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1564750573341},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar ngx_webstorage_1 = require(\"ngx-webstorage\");\r\nvar ngx_cookie_1 = require(\"ngx-cookie\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar ngx_uploader_1 = require(\"ngx-uploader\");\r\nvar upload_file_service_1 = require(\"./upload-file.service\");\r\nvar FileUploadComponent = /** @class */ (function () {\r\n    function FileUploadComponent(http, sessionStorage, uploadService, localStorage) {\r\n        this.http = http;\r\n        this.sessionStorage = sessionStorage;\r\n        this.uploadService = uploadService;\r\n        this.localStorage = localStorage;\r\n        this.fileResponse = new core_1.EventEmitter();\r\n        this.notDeletedDocument = new core_1.EventEmitter();\r\n        this.url = 'api/adjuntos/_upload';\r\n        this.listFiles = [];\r\n        this.fileHashes = [];\r\n        this.listIdFiles = [];\r\n        this.sizeLimit = 8000000; /** aqui le doy 8mb*/\r\n        this.colorC = true;\r\n        this.colorP = true;\r\n        this.colorF = true;\r\n        // aqui solo limito la cantidad de archivos que se suben al mismo tiempo\r\n        this.options = { concurrency: 1 }; //  ,maxUploads: 3 agregaria limite pero no funciona bien\r\n        this.files = [];\r\n        this.uploadInput = new core_1.EventEmitter();\r\n        this.humanizeBytes = ngx_uploader_1.humanizeBytes;\r\n    }\r\n    FileUploadComponent.prototype.ngOnInit = function () {\r\n        this.token = this.localStorage.retrieve('authenticationToken') || this.sessionStorage.retrieve('authenticationToken');\r\n    };\r\n    FileUploadComponent.prototype.ngOnChanges = function () {\r\n        if (typeof this.adjuntos !== 'undefined' && this.adjuntos !== null && this.adjuntos.length > 0) {\r\n            this.listFiles = this.adjuntos;\r\n        }\r\n        if (typeof this.documentos !== 'undefined' && this.documentos !== null && this.documentos.length > 0) {\r\n        }\r\n    };\r\n    FileUploadComponent.prototype.onUploadOutput = function (output) {\r\n        var _this = this;\r\n        if (output.type === 'allAddedToQueue') {\r\n            var event = {\r\n                type: 'uploadAll',\r\n                url: this.url,\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + this.token\r\n                },\r\n                data: { foo: 'bar' }\r\n            };\r\n            this.uploadInput.emit(event);\r\n        }\r\n        else if (output.type === 'uploading' && typeof output.file !== 'undefined') {\r\n            var index = this.files.findIndex(function (file) { return typeof output.file !== 'undefined' && file.id === output.file.id; });\r\n            this.files[index] = output.file;\r\n        }\r\n        else if (output.type === 'cancelled' || output.type === 'removed') {\r\n            this.files = this.files.filter(function (file) { return file !== output.file; });\r\n        }\r\n        else if (output.type === 'dragOver') {\r\n            this.dragOver = true;\r\n        }\r\n        else if (output.type === 'dragOut') {\r\n            this.dragOver = false;\r\n        }\r\n        else if (output.type === 'drop') {\r\n            this.dragOver = false;\r\n        }\r\n        else if (output.type === 'rejected' && typeof output.file !== 'undefined') {\r\n        }\r\n        else if (output.type === 'done') {\r\n            this.files.forEach(function (file) {\r\n                _this.fileHashes.push(file.response.hash);\r\n                _this.fileResponse.emit(_this.listFiles);\r\n                _this.listFiles.push(file.response.fileinfo);\r\n            });\r\n            console.log('list ', this.listFiles.length);\r\n            /** condicion de subida de archivos*/\r\n        }\r\n        else if (output.type === 'addedToQueue' && typeof output.file !== 'undefined') {\r\n            this.nombreAdjunto = output.file.name.substring(output.file.name.lastIndexOf('.') + 1).toLowerCase();\r\n            console.log('nombre archivos: ', output.file.name, ', extension: ', this.nombreAdjunto, ', tamaño: ', output.file.size);\r\n            /** cambio de color*/\r\n            if (this.listFiles.length >= 3) {\r\n                this.colorC = false;\r\n                alert('No puedes subir mas de 3 archivos');\r\n            }\r\n            else {\r\n                this.colorC = true;\r\n            }\r\n            if (output.file.size > this.sizeLimit) {\r\n                this.colorP = false;\r\n                alert('el archivo no puede pesar mas de 8Mb');\r\n            }\r\n            else {\r\n                this.colorP = true;\r\n            }\r\n            if ((this.nombreAdjunto !== 'pdf' && this.nombreAdjunto !== 'docx')) {\r\n                this.colorF = false;\r\n                alert('El archivo debe ser PDF ');\r\n            }\r\n            else {\r\n                this.colorF = true;\r\n            }\r\n            /** condicion  debe ser menor a 3 archivos y menor al tamaño limite y formato pdf*/\r\n            if ((this.listFiles.length < 3 && output.file.size < this.sizeLimit) && (this.nombreAdjunto === 'pdf' || this.nombreAdjunto === 'docx')) {\r\n                this.files.push(output.file);\r\n                console.log('cantidad de archivos', this.listFiles.length);\r\n            }\r\n        }\r\n        this.files = this.files.filter(function (file) { return file.progress.status !== ngx_uploader_1.UploadStatus.Done; });\r\n    };\r\n    FileUploadComponent.prototype.startUpload = function () {\r\n        var event = {\r\n            type: 'uploadAll',\r\n            url: this.url,\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.token\r\n            },\r\n            method: 'POST',\r\n            data: { foo: 'bar' }\r\n        };\r\n        this.uploadInput.emit(event);\r\n    };\r\n    FileUploadComponent.prototype.cancelUpload = function (id) {\r\n        this.uploadInput.emit({ type: 'cancel', id: id });\r\n    };\r\n    /** este es el eliminar de la lista que se ve */\r\n    FileUploadComponent.prototype.removeFile = function (id) {\r\n        var _this = this;\r\n        var hashAux = null;\r\n        this.uploadService.delete(parseInt(id, 10)).subscribe(function (response) {\r\n            _this.listFiles = _this.listFiles.filter(function (file) {\r\n                if (file.id !== parseInt(id, 10)) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    hashAux = file.hash;\r\n                    /** solo devuelvo el color */\r\n                    _this.colorC = true;\r\n                    _this.colorP = true;\r\n                    _this.colorF = true;\r\n                }\r\n            });\r\n            _this.fileHashes = _this.fileHashes.filter(function (hash) {\r\n                if (hash !== hashAux) {\r\n                    return true;\r\n                }\r\n            });\r\n            _this.fileResponse.emit(_this.listFiles);\r\n        });\r\n    };\r\n    FileUploadComponent.prototype.removeDocument = function (id) {\r\n        var _this = this;\r\n        console.log('delete document ' + id);\r\n        this.uploadService.deleteDoc(parseInt(id, 10)).subscribe(function (response) {\r\n            _this.documentos = _this.documentos.filter(function (doc) { return doc.id !== parseInt(id, 10); });\r\n            _this.notDeletedDocument.emit(_this.documentos);\r\n        });\r\n    };\r\n    FileUploadComponent.prototype.removeAllFiles = function () {\r\n        this.uploadInput.emit({ type: 'removeAll' });\r\n    };\r\n    tslib_1.__decorate([\r\n        core_1.Output(),\r\n        tslib_1.__metadata(\"design:type\", typeof (_a = typeof core_1.EventEmitter !== \"undefined\" && core_1.EventEmitter) === \"function\" && _a || Object)\r\n    ], FileUploadComponent.prototype, \"fileResponse\", void 0);\r\n    tslib_1.__decorate([\r\n        core_1.Output(),\r\n        tslib_1.__metadata(\"design:type\", typeof (_b = typeof core_1.EventEmitter !== \"undefined\" && core_1.EventEmitter) === \"function\" && _b || Object)\r\n    ], FileUploadComponent.prototype, \"notDeletedDocument\", void 0);\r\n    tslib_1.__decorate([\r\n        core_1.Input(),\r\n        tslib_1.__metadata(\"design:type\", Array)\r\n    ], FileUploadComponent.prototype, \"adjuntos\", void 0);\r\n    tslib_1.__decorate([\r\n        core_1.Input(),\r\n        tslib_1.__metadata(\"design:type\", Array)\r\n    ], FileUploadComponent.prototype, \"documentos\", void 0);\r\n    FileUploadComponent = tslib_1.__decorate([\r\n        core_1.Component({\r\n            selector: 'jhi-file-upload-component',\r\n            templateUrl: './file-upload.component.html',\r\n            styleUrls: ['./file-upload.component.css'],\r\n            providers: [ngx_cookie_1.CookieService]\r\n        }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_c = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _c || Object, typeof (_d = typeof ngx_webstorage_1.SessionStorageService !== \"undefined\" && ngx_webstorage_1.SessionStorageService) === \"function\" && _d || Object, typeof (_e = typeof upload_file_service_1.UploadFileService !== \"undefined\" && upload_file_service_1.UploadFileService) === \"function\" && _e || Object, typeof (_f = typeof ngx_webstorage_1.LocalStorageService !== \"undefined\" && ngx_webstorage_1.LocalStorageService) === \"function\" && _f || Object])\r\n    ], FileUploadComponent);\r\n    return FileUploadComponent;\r\n    var _a, _b, _c, _d, _e, _f;\r\n}());\r\nexports.FileUploadComponent = FileUploadComponent;\r\n",{"version":3,"file":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\shared\\util\\file_upload\\file-upload.component.ts","sourceRoot":"","sources":["C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\shared\\util\\file_upload\\file-upload.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\r\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\r\nimport { CookieService } from 'ngx-cookie';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { humanizeBytes, UploaderOptions, UploadFile, UploadInput, UploadOutput, UploadStatus } from 'ngx-uploader';\r\nimport { UploadFileService } from './upload-file.service';\r\nimport {IAdjunto} from '../../model/adjunto.model';\r\nimport {IDocumento} from '../../model/documento.model';\r\n\r\n@Component({\r\n    selector: 'jhi-file-upload-component',\r\n    templateUrl: './file-upload.component.html',\r\n    styleUrls: ['./file-upload.component.css'],\r\n    providers: [CookieService]\r\n})\r\nexport class FileUploadComponent implements OnInit, OnChanges {\r\n    @Output() fileResponse: EventEmitter<any> = new EventEmitter();\r\n    @Output() notDeletedDocument: EventEmitter<any> = new EventEmitter();\r\n    @Input() adjuntos: IAdjunto[];\r\n    @Input() documentos: IDocumento[];\r\n\r\n    url = 'api/adjuntos/_upload';\r\n    formData: FormData;\r\n    files: UploadFile[];\r\n    uploadInput: EventEmitter<UploadInput>;\r\n    humanizeBytes: Function;\r\n    dragOver: boolean;\r\n    options: UploaderOptions;\r\n    showBar: true;\r\n\r\n    listFiles = [];\r\n\r\n    fileHashes = [];\r\n    listIdFiles = [];\r\n\r\n    token: string;\r\n    nombreAdjunto: String;\r\n    sizeLimit = 8000000; /** aqui le doy 8mb*/\r\n\r\n    colorC = true ;\r\n    colorP = true ;\r\n    colorF = true ;\r\n    constructor(\r\n        private http: HttpClient,\r\n        private sessionStorage: SessionStorageService,\r\n        private uploadService: UploadFileService,\r\n        private localStorage: LocalStorageService\r\n    ) {\r\n        // aqui solo limito la cantidad de archivos que se suben al mismo tiempo\r\n        this.options = { concurrency: 1 }; //  ,maxUploads: 3 agregaria limite pero no funciona bien\r\n        this.files = [];\r\n        this.uploadInput = new EventEmitter<UploadInput>();\r\n        this.humanizeBytes = humanizeBytes;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.token = this.localStorage.retrieve('authenticationToken') || this.sessionStorage.retrieve('authenticationToken');\r\n    }\r\n\r\n    ngOnChanges() {\r\n        if (typeof this.adjuntos !== 'undefined' && this.adjuntos !== null && this.adjuntos.length > 0) {\r\n            this.listFiles = this.adjuntos;\r\n        }\r\n        if (typeof this.documentos !== 'undefined' && this.documentos !== null && this.documentos.length > 0) {\r\n\r\n        }\r\n    }\r\n\r\n    onUploadOutput(output: UploadOutput): void {\r\n        if (output.type === 'allAddedToQueue') {\r\n            const event: UploadInput = {\r\n                type: 'uploadAll',\r\n                url: this.url,\r\n                method: 'POST',\r\n                headers: {\r\n                    Authorization: 'Bearer ' + this.token\r\n                },\r\n                data: { foo: 'bar' }\r\n            };\r\n            this.uploadInput.emit(event);\r\n        } else if (output.type === 'uploading' && typeof output.file !== 'undefined') {\r\n            const index = this.files.findIndex(file => typeof output.file !== 'undefined' && file.id === output.file.id);\r\n            this.files[index] = output.file;\r\n        } else if (output.type === 'cancelled' || output.type === 'removed') {\r\n            this.files = this.files.filter((file: UploadFile) => file !== output.file);\r\n        } else if (output.type === 'dragOver') {\r\n            this.dragOver = true;\r\n        } else if (output.type === 'dragOut') {\r\n            this.dragOver = false;\r\n        } else if (output.type === 'drop') {\r\n            this.dragOver = false;\r\n        } else if (output.type === 'rejected' && typeof output.file !== 'undefined') {\r\n\r\n        } else if (output.type === 'done') {\r\n            this.files.forEach(file => {\r\n                this.fileHashes.push(file.response.hash);\r\n                this.fileResponse.emit(this.listFiles);\r\n                this.listFiles.push(file.response.fileinfo);\r\n            });\r\n            console.log('list ', this.listFiles.length);\r\n            /** condicion de subida de archivos*/\r\n        } else if (output.type === 'addedToQueue' && typeof output.file !== 'undefined') {\r\n            this.nombreAdjunto = output.file.name.substring(output.file.name.lastIndexOf('.') + 1).toLowerCase();\r\n            console.log('nombre archivos: ', output.file.name , ', extension: ', this.nombreAdjunto, ', tamaño: ', output.file.size  );\r\n            /** cambio de color*/\r\n            if (this.listFiles.length >= 3) {this.colorC = false; alert ('No puedes subir mas de 3 archivos');  } else {this.colorC = true; }\r\n            if (output.file.size > this.sizeLimit) {this.colorP = false; alert ('el archivo no puede pesar mas de 8Mb'); } else {this.colorP = true; }\r\n            if ((this.nombreAdjunto !== 'pdf' && this.nombreAdjunto !== 'docx' )) {this.colorF = false; alert ('El archivo debe ser PDF '); } else {this.colorF = true; }\r\n            /** condicion  debe ser menor a 3 archivos y menor al tamaño limite y formato pdf*/\r\n            if ((this.listFiles.length < 3 && output.file.size < this.sizeLimit) && (this.nombreAdjunto === 'pdf' || this.nombreAdjunto === 'docx'   ) ) {\r\n                this.files.push(output.file);\r\n                console.log('cantidad de archivos', this.listFiles.length);\r\n            }\r\n        }\r\n        this.files = this.files.filter(file => file.progress.status !== UploadStatus.Done);\r\n    }\r\n\r\n    startUpload(): void {\r\n        const event: UploadInput = {\r\n            type: 'uploadAll',\r\n            url: this.url,\r\n            headers: {\r\n                Authorization: 'Bearer ' + this.token\r\n            },\r\n            method: 'POST',\r\n            data: { foo: 'bar' }\r\n        };\r\n\r\n        this.uploadInput.emit(event);\r\n    }\r\n\r\n    cancelUpload(id: string): void {\r\n        this.uploadInput.emit({ type: 'cancel', id});\r\n    }\r\n    /** este es el eliminar de la lista que se ve */\r\n    removeFile(id: string): void {\r\n        let hashAux = null;\r\n        this.uploadService.delete(parseInt(id, 10)).subscribe(response => {\r\n            this.listFiles = this.listFiles.filter(file => {\r\n                if (file.id !== parseInt(id, 10)) {\r\n                    return true;\r\n                } else {\r\n                    hashAux = file.hash;\r\n                    /** solo devuelvo el color */\r\n                    this.colorC = true;\r\n                    this.colorP = true;\r\n                    this.colorF = true;\r\n                }\r\n            });\r\n\r\n            this.fileHashes = this.fileHashes.filter(hash => {\r\n                if (hash !== hashAux) {\r\n                    return true;\r\n                }\r\n            });\r\n\r\n            this.fileResponse.emit(this.listFiles);\r\n        });\r\n    }\r\n\r\n    removeDocument(id: string): void {\r\n        console.log('delete document ' + id);\r\n        this.uploadService.deleteDoc(parseInt(id, 10)).subscribe(response => {\r\n            this.documentos = this.documentos.filter(doc => doc.id !== parseInt(id, 10));\r\n            this.notDeletedDocument.emit(this.documentos);\r\n        });\r\n    }\r\n\r\n    removeAllFiles(): void {\r\n        this.uploadInput.emit({ type: 'removeAll' });\r\n    }\r\n}\r\n"]}]}