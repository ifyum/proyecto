{"remainingRequest":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\providencia\\providencia.service.ts","dependencies":[{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\providencia\\providencia.service.ts","mtime":1573006700425},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564750574678},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1564750573341},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar moment = require(\"moment\");\r\nvar operators_1 = require(\"rxjs/operators\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar shared_1 = require(\"app/shared\");\r\n// librerias para descargar formato excel\r\nvar FileSaver = require(\"file-saver\");\r\nvar XLSX = require(\"xlsx\");\r\nvar EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\nvar EXCEL_EXTENSION = '.xlsx';\r\nvar ProvidenciaService = /** @class */ (function () {\r\n    function ProvidenciaService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/providencias';\r\n    }\r\n    ProvidenciaService.prototype.exportAsExcelFile = function (json, excelFileName) {\r\n        var worksheet = XLSX.utils.json_to_sheet(json);\r\n        var workbook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\r\n        var excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\r\n        this.saveAsExcelFile(excelBuffer, excelFileName);\r\n    };\r\n    ProvidenciaService.prototype.saveAsExcelFile = function (buffer, fileName) {\r\n        var data = new Blob([buffer], { type: EXCEL_TYPE });\r\n        FileSaver.saveAs(data, fileName + '_export_' + new Date().getTime() + EXCEL_EXTENSION);\r\n    };\r\n    ProvidenciaService.prototype.create = function (providencia) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(providencia);\r\n        return this.http\r\n            .post(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.update = function (providencia) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(providencia);\r\n        return this.http\r\n            .put(this.resourceUrl, copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.providenciaUpdateForType = function (providenciaUpdateForType) {\r\n        var _this = this;\r\n        console.log('este es el objeto', providenciaUpdateForType);\r\n        return this.http\r\n            .put(this.resourceUrl + \"/updateProvidenciaForType\", providenciaUpdateForType, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.updateFiscal = function (providencia) {\r\n        var _this = this;\r\n        var copy = this.convertDateFromClient(providencia);\r\n        return this.http.\r\n            put(this.resourceUrl + \"/fiscal\", copy, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.updateNroReferencia = function (providencia) {\r\n        var _this = this;\r\n        return this.http.\r\n            put(this.resourceUrl + \"/nroReferencia\", providencia, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.updateFolio = function (providencia) {\r\n        var _this = this;\r\n        return this.http.\r\n            put(this.resourceUrl + \"/folio\", providencia, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.updateTipoSolicitud = function (providencia) {\r\n        var _this = this;\r\n        console.log('almacenando la providencia', providencia);\r\n        return this.http.\r\n            put(this.resourceUrl + \"/tipoSolicitud\", providencia, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.find = function (id) {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/detalle/\" + id, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.query = function (req) {\r\n        var _this = this;\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http\r\n            .get(this.resourceUrl, { params: options, observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.reply = function (response) {\r\n        return this.http.post(this.resourceUrl + '/reply', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.terminoProbatorio = function (response) {\r\n        return this.http.post(this.resourceUrl + '/terminoProbatorio', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.siDeAcuerdo = function (response) {\r\n        return this.http.post(this.resourceUrl + '/siDeAcuerdo', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.noPropone = function (response) {\r\n        return this.http.post(this.resourceUrl + '/noPropone', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.noReabro = function (response) {\r\n        return this.http.post(this.resourceUrl + '/noReabro', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.aceptar = function (response) {\r\n        return this.http.post(this.resourceUrl + '/aceptar', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.rechazar = function (response) {\r\n        return this.http.post(this.resourceUrl + '/rechazar', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.goBackwards = function (response) {\r\n        return this.http.post(this.resourceUrl + '/comeback', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.prorroga = function (response) {\r\n        return this.http.post(this.resourceUrl + '/prorroga', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.inculpadoNoEnviaMemo = function (response) {\r\n        return this.http.post(this.resourceUrl + '/inculpadoNoEnviaMemo', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.inculpadoEnviaMemo = function (response) {\r\n        return this.http.post(this.resourceUrl + '/inculpadoEnviaMemo', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.updNotificaInculpado = function (response) {\r\n        return this.http.post(this.resourceUrl + '/updNotificaInculpado', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.formulaCargos = function (response) {\r\n        return this.http.post(this.resourceUrl + '/formularCargos', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.remiteExpediente = function (response) {\r\n        return this.http.post(this.resourceUrl + '/remiteExpediente', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.apela = function (response) {\r\n        return this.http.post(this.resourceUrl + '/apela', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.noApela = function (response) {\r\n        return this.http.post(this.resourceUrl + '/noApela', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.fiscalNotificaCierre = function (response) {\r\n        return this.http.post(this.resourceUrl + '/fiscalNotificaCierre', response, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.getActionsPermitted = function (providencia) {\r\n        return this.http.post(this.resourceUrl + '/actions', providencia, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.getPlantillasEnabled = function (providencia) {\r\n        return this.http.post(this.resourceUrl + '/templates', providencia, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.getAllByRunOrEntidadImplicada = function (run, entidadImplicadaId, providenciaId) {\r\n        return this.http.get(this.resourceUrl + \"/related/\" + run + \"/\" + entidadImplicadaId + \"/\" + providenciaId, { observe: 'response' });\r\n    };\r\n    ProvidenciaService.prototype.findByFiscal = function (providecia) {\r\n        var _this = this;\r\n        return this.http\r\n            .post(this.resourceUrl + \"/providencia\", providecia, { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.getAllWithoutPagination = function () {\r\n        var _this = this;\r\n        return this.http\r\n            .get(this.resourceUrl + \"/buscarNroReferencia\", { observe: 'response' })\r\n            .pipe(operators_1.map(function (res) { return _this.convertDateArrayFromServer(res); }));\r\n    };\r\n    ProvidenciaService.prototype.convertDateFromClient = function (providencia) {\r\n        var copy = Object.assign({}, providencia, {\r\n            fechaSolicitud: providencia.fechaSolicitud != null && providencia.fechaSolicitud.isValid() ? providencia.fechaSolicitud.toJSON() : null,\r\n            fechaCreacion: providencia.fechaCreacion != null && providencia.fechaCreacion.isValid() ? providencia.fechaCreacion.toJSON() : null\r\n        });\r\n        return copy;\r\n    };\r\n    ProvidenciaService.prototype.convertDateFromServer = function (res) {\r\n        res.body.fechaSolicitud = res.body.fechaSolicitud != null ? moment(res.body.fechaSolicitud) : null;\r\n        res.body.fechaCreacion = res.body.fechaCreacion != null ? moment(res.body.fechaCreacion) : null;\r\n        return res;\r\n    };\r\n    ProvidenciaService.prototype.convertDateArrayFromServer = function (res) {\r\n        res.body.forEach(function (providencia) {\r\n            providencia.fechaSolicitud = providencia.fechaSolicitud != null ? moment(providencia.fechaSolicitud) : null;\r\n            providencia.fechaCreacion = providencia.fechaCreacion != null ? moment(providencia.fechaCreacion) : null;\r\n        });\r\n        return res;\r\n    };\r\n    ProvidenciaService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], ProvidenciaService);\r\n    return ProvidenciaService;\r\n    var _a;\r\n}());\r\nexports.ProvidenciaService = ProvidenciaService;\r\n",{"version":3,"file":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\providencia\\providencia.service.ts","sourceRoot":"","sources":["C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\entities\\providencia\\providencia.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { map } from 'rxjs/operators';\nimport { SERVER_API_URL } from 'app/app.constants';\nimport { createRequestOption } from 'app/shared';\nimport { IProvidencia, IProvidenciaResponse, IProvidenciaUpdateForType, IProvidenciaUpdateNroReferencia, IProvidenciaUpdateTipoSolicitud} from 'app/shared/model/providencia.model';\nimport { IPlantilla} from '../../shared/model/plantilla.model';\n// librerias para descargar formato excel\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\ntype EntityResponseType = HttpResponse<IProvidencia>;\ntype EntityArrayResponseType = HttpResponse<IProvidencia[]>;\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable({ providedIn: 'root' })\nexport class ProvidenciaService {\n    private resourceUrl = SERVER_API_URL + 'api/providencias';\n\n    constructor(private http: HttpClient) {}\n\n    public exportAsExcelFile(json: any[], excelFileName: string): void {\n        const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n        const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n        const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n        this.saveAsExcelFile(excelBuffer, excelFileName);\n    }\n    private saveAsExcelFile(buffer: any, fileName: string): void {\n        const data: Blob = new Blob([buffer], {type: EXCEL_TYPE});\n        FileSaver.saveAs(data, fileName + '_export_' + new  Date().getTime() + EXCEL_EXTENSION);\n    }\n\n    create(providencia: IProvidencia): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(providencia);\n        return this.http\n            .post<IProvidencia>(this.resourceUrl, copy, { observe: 'response' })\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    update(providencia: IProvidencia): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(providencia);\n        return this.http\n            .put<IProvidencia>(this.resourceUrl, copy, { observe: 'response' })\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    providenciaUpdateForType(providenciaUpdateForType: IProvidenciaUpdateForType): Observable<EntityResponseType> {\n        console.log('este es el objeto' , providenciaUpdateForType);\n        return this.http\n            .put<IProvidencia>(`${this.resourceUrl}/updateProvidenciaForType`, providenciaUpdateForType, { observe: 'response'} )\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    updateFiscal(providencia: IProvidencia): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(providencia);\n        return this.http.\n        put<IProvidencia>(`${this.resourceUrl}/fiscal`, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    updateNroReferencia(providencia: IProvidenciaUpdateNroReferencia): Observable<EntityResponseType> {\n        return this.http.\n        put<IProvidencia>(`${this.resourceUrl}/nroReferencia`, providencia, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    updateFolio(providencia: IProvidenciaUpdateNroReferencia): Observable<EntityResponseType> {\n        return this.http.\n        put<IProvidencia>(`${this.resourceUrl}/folio`, providencia, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n\n    updateTipoSolicitud(providencia: IProvidenciaUpdateTipoSolicitud): Observable<EntityResponseType> {\n        console.log('almacenando la providencia', providencia);\n        return this.http.\n        put<IProvidencia>(`${this.resourceUrl}/tipoSolicitud`, providencia, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http\n            .get<IProvidencia>(`${this.resourceUrl}/detalle/${id}`, { observe: 'response' })\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    query(req?: any): Observable<EntityArrayResponseType> {\n        const options = createRequestOption(req);\n        return this.http\n            .get<IProvidencia[]>(this.resourceUrl, { params: options, observe: 'response' })\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\n    }\n\n    reply(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/reply', response, {observe: 'response'});\n    }\n\n    terminoProbatorio(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/terminoProbatorio', response, {observe: 'response'});\n    }\n\n    siDeAcuerdo(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/siDeAcuerdo', response, {observe: 'response'});\n    }\n    noPropone(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/noPropone', response, {observe: 'response'});\n    }\n    noReabro(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/noReabro', response, {observe: 'response'});\n    }\n    aceptar(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/aceptar', response, {observe: 'response'});\n    }\n\n    rechazar(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/rechazar', response, {observe: 'response'});\n    }\n\n    goBackwards(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/comeback', response, {observe: 'response'});\n    }\n\n    prorroga(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/prorroga', response, {observe: 'response'});\n    }\n\n    inculpadoNoEnviaMemo(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/inculpadoNoEnviaMemo', response, {observe: 'response'});\n    }\n\n    inculpadoEnviaMemo(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/inculpadoEnviaMemo', response, {observe: 'response'});\n\n    }updNotificaInculpado(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/updNotificaInculpado', response, {observe: 'response'});\n    }\n\n    formulaCargos(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/formularCargos', response, {observe: 'response'});\n    }\n\n    remiteExpediente(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/remiteExpediente', response, {observe: 'response'});\n    }\n\n    apela(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/apela', response, {observe: 'response'});\n    }\n\n    noApela(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/noApela', response, {observe: 'response'});\n    }\n\n    fiscalNotificaCierre(response: IProvidenciaResponse): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/fiscalNotificaCierre', response, {observe: 'response'});\n    }\n\n    getActionsPermitted(providencia: IProvidencia): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/actions', providencia, {observe: 'response'});\n    }\n\n    getPlantillasEnabled(providencia: IProvidencia): Observable<HttpResponse<IPlantilla[]>> {\n        return this.http.post<IPlantilla[]>(this.resourceUrl + '/templates', providencia, {observe: 'response'});\n    }\n\n    getAllByRunOrEntidadImplicada(run: string, entidadImplicadaId: number, providenciaId: number): Observable<EntityArrayResponseType> {\n        return this.http.get<IProvidencia[]>(`${this.resourceUrl}/related/${run}/${entidadImplicadaId}/${providenciaId}`, {observe: 'response'});\n    }\n\n    findByFiscal( providecia: IProvidencia): Observable<EntityResponseType> {\n        return this.http\n            .post<IProvidencia>(`${this.resourceUrl}/providencia`, providecia, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    getAllWithoutPagination(): Observable<EntityArrayResponseType> {\n        return this.http\n            .get<IProvidencia[]>(`${this.resourceUrl}/buscarNroReferencia`, { observe: 'response' })\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n    }\n\n    private convertDateFromClient(providencia: IProvidencia): IProvidencia {\n        const copy: IProvidencia = Object.assign({}, providencia, {\n            fechaSolicitud:\n                providencia.fechaSolicitud != null && providencia.fechaSolicitud.isValid() ? providencia.fechaSolicitud.toJSON() : null,\n            fechaCreacion:\n                providencia.fechaCreacion != null && providencia.fechaCreacion.isValid() ? providencia.fechaCreacion.toJSON() : null\n        });\n        return copy;\n    }\n\n    private convertDateFromServer(res: EntityResponseType): EntityResponseType {\n        res.body.fechaSolicitud = res.body.fechaSolicitud != null ? moment(res.body.fechaSolicitud) : null;\n        res.body.fechaCreacion = res.body.fechaCreacion != null ? moment(res.body.fechaCreacion) : null;\n        return res;\n    }\n\n    private convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n        res.body.forEach((providencia: IProvidencia) => {\n            providencia.fechaSolicitud = providencia.fechaSolicitud != null ? moment(providencia.fechaSolicitud) : null;\n            providencia.fechaCreacion = providencia.fechaCreacion != null ? moment(providencia.fechaCreacion) : null;\n        });\n        return res;\n    }\n}\n"]}]}