{"remainingRequest":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\notifications\\notificaciones.service.ts","dependencies":[{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\notifications\\notificaciones.service.ts","mtime":1572998499118},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564750574678},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1564750573341},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\ts-loader\\index.js","mtime":1519365772000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar app_constants_1 = require(\"app/app.constants\");\r\nvar core_1 = require(\"@angular/core\");\r\nvar http_1 = require(\"@angular/common/http\");\r\nvar shared_1 = require(\"app/shared\");\r\nvar NotificacionService = /** @class */ (function () {\r\n    function NotificacionService(http) {\r\n        this.http = http;\r\n        this.resourceUrl = app_constants_1.SERVER_API_URL + 'api/notificacion-in-browsers';\r\n    }\r\n    NotificacionService.prototype.create = function (notificacion) {\r\n        return this.http.post(this.resourceUrl, notificacion, { observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.update = function (notificacion) {\r\n        return this.http.put(this.resourceUrl, notificacion, { observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.find = function (userId) {\r\n        return this.http.get(this.resourceUrl + \"/\" + userId, { observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.marcarLeidas = function (id) {\r\n        return this.http.put(this.resourceUrl + \"/noti/\" + id, { observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.query = function (req) {\r\n        var options = shared_1.createRequestOption(req);\r\n        return this.http.get(this.resourceUrl, { params: options, observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.delete = function (id) {\r\n        return this.http.delete(this.resourceUrl + \"/\" + id, { observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.notificacionCount = function () {\r\n        return this.http\r\n            .get(this.resourceUrl + \"/count\", { observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.listarNotificacionNoLeidas = function () {\r\n        return this.http\r\n            .get(this.resourceUrl + \"/no-leidas\", { observe: 'response' });\r\n    };\r\n    NotificacionService.prototype.listarNotificaciones = function () {\r\n        return this.http\r\n            .get(\"\" + this.resourceUrl, { observe: 'response' });\r\n    };\r\n    NotificacionService = tslib_1.__decorate([\r\n        core_1.Injectable({ providedIn: 'root' }),\r\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" && _a || Object])\r\n    ], NotificacionService);\r\n    return NotificacionService;\r\n    var _a;\r\n}());\r\nexports.NotificacionService = NotificacionService;\r\n",{"version":3,"file":"C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\notifications\\notificaciones.service.ts","sourceRoot":"","sources":["C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\node_modules\\tslint-loader\\index.js!C:\\Users\\rbarrera\\Documents\\Proyectos\\ifyum\\app\\src\\main\\webapp\\app\\notifications\\notificaciones.service.ts"],"names":[],"mappings":";;;AAAA,mDAAiD;AACjD,sCAAyC;AACzC,6CAA8D;AAE9D,qCAA+C;AAM/C;IAGI,6BAAsB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF/B,gBAAW,GAAG,8BAAc,GAAG,8BAA8B,CAAC;IAE5B,CAAC;IAE1C,oCAAM,GAAN,UAAO,YAAiB;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,oCAAM,GAAN,UAAO,YAAiB;QACpB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,kCAAI,GAAJ,UAAK,MAAc;QACf,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,WAAW,SAAI,MAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,0CAAY,GAAZ,UAAa,EAAU;QACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,WAAW,cAAS,EAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACzF,CAAC;IAED,mCAAK,GAAL,UAAM,GAAS;QACX,IAAM,OAAO,GAAG,4BAAmB,CAAC,GAAG,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAC5F,CAAC;IAED,oCAAM,GAAN,UAAO,EAAU;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAS,IAAI,CAAC,WAAW,SAAI,EAAI,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IACvF,CAAC;IAED,+CAAiB,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,GAAG,CAAS,IAAI,CAAC,WAAW,WAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAExE,CAAC;IAED,wDAA0B,GAA1B;QACI,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,GAAG,CAAS,IAAI,CAAC,WAAW,eAAY,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAE5E,CAAC;IAED,kDAAoB,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI;aACX,GAAG,CAAM,KAAG,IAAI,CAAC,WAAa,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC;IAElE,CAAC;IA9CQ,mBAAmB;QAD/B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAIH,iBAAU,oBAAV,iBAAU;OAH7B,mBAAmB,CA+C/B;IAAD,0BAAC;;CAAA,AA/CD,IA+CC;AA/CY,kDAAmB","sourcesContent":["import {SERVER_API_URL} from 'app/app.constants';\r\nimport {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {createRequestOption} from 'app/shared';\r\n\r\ntype EntityResponseType = HttpResponse<any>;\r\ntype EntityArrayResponseType = HttpResponse<any>;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificacionService {\r\n    public resourceUrl = SERVER_API_URL + 'api/notificacion-in-browsers';\r\n\r\n    constructor(protected http: HttpClient) {}\r\n\r\n    create(notificacion: any): Observable<EntityResponseType> {\r\n        return this.http.post<any>(this.resourceUrl, notificacion, { observe: 'response' });\r\n    }\r\n\r\n    update(notificacion: any): Observable<EntityResponseType> {\r\n        return this.http.put<any>(this.resourceUrl, notificacion, { observe: 'response' });\r\n    }\r\n\r\n    find(userId: number): Observable<EntityResponseType> {\r\n        return this.http.get<any>(`${this.resourceUrl}/${userId}`, { observe: 'response' });\r\n    }\r\n\r\n    marcarLeidas(id: number): Observable<EntityResponseType> {\r\n        return this.http.put<any>(`${this.resourceUrl}/noti/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    query(req?: any): Observable<EntityArrayResponseType> {\r\n        const options = createRequestOption(req);\r\n        return this.http.get<any[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n    }\r\n\r\n    delete(id: number): Observable<HttpResponse<any>> {\r\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, { observe: 'response' });\r\n    }\r\n\r\n    notificacionCount(): Observable<EntityArrayResponseType> {\r\n        return this.http\r\n            .get<any>(`${this.resourceUrl}/count`, { observe: 'response' });\r\n\r\n    }\r\n\r\n    listarNotificacionNoLeidas(): Observable<EntityArrayResponseType> {\r\n        return this.http\r\n            .get<any>(`${this.resourceUrl}/no-leidas`, { observe: 'response' });\r\n\r\n    }\r\n\r\n    listarNotificaciones(): Observable<EntityArrayResponseType> {\r\n        return this.http\r\n            .get<any>(`${this.resourceUrl}`, { observe: 'response' });\r\n\r\n    }\r\n}\r\n"]}]}